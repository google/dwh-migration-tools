# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Example macro substitution map definition.
# To enable macro substitution, pass the arg '-m macro_substitution_map.yaml' when running the Python tool. And the tool
# will perform the following operations on the query files.
# Before translation starts (pre-processing): For every file ended with '.sql', the '${MACRO_1}' and '%MACRO_2%' will be replaced with
# 'macro_replacement_1' and 'macro_replacement_2', respectively. For the file '2.sql', this tool will also replace
# 'templated_column' with 'replacing_column'.
# After translation finishes (post-processing): The tool will reverse the substitution for all the output query files by replacing the
# values with keys in the map.

# Notes that the tool just performs strict string replacement for all the macros (keys defined in the map) in a single
# path.
# During post-processing, a reverse map is first computed by simply swapping the keys and values for each file in the
# map.  Collision can happen if different macros are mapped to the same value.

macros:
  '*.sql':
    '${MACRO_1}': 'my_table'
    '%MACRO_2%': 'macro_replacement_2'
  '2.sql':
    'templated_column': 'replacing_column'