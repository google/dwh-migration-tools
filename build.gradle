plugins {
    id 'java-library-distribution'
    alias libs.plugins.ben.manes.versions
    alias libs.plugins.version.catalog.update
}

distributions {
    published {
        distributionBaseName = "dwh-migration-tools"
        contents {
            from("client") {
                exclude "**/__pycache__"
                into "client"
            }
            project(":dumper:app").afterEvaluate {
                from it.tasks.installPublishedDist
            }
        }
    }
}

versionCatalogUpdate {
    sortByKey = true
    def isNonStable = { String version -> // from the examples in ben-manes plugin; may need adjustment for the particular dependencies of this repo
        def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { k -> version.toUpperCase().contains(k) }
        def regex = /^[0-9,.v-]+(-r)?$/
        return !stableKeyword && !(version ==~ regex)
    }
    tasks.named("dependencyUpdates").configure {
        rejectVersionIf {
            isNonStable(it.candidate.version)
        }
    }
    pin {
    }
    keep {
        keepUnusedVersions = true
        keepUnusedLibraries = true
        keepUnusedPlugins = true
    }
}
