/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    alias libs.plugins.shadow
    id 'dbsync.java-application-conventions'
}

dependencies {
    implementation project(':dbsync:common')
    implementation project(':dbsync:storage-aws')
    implementation project(':dbsync:storage-gcs')
    implementation libs.jopt.simple
    implementation libs.jdiagnostics
    implementation libs.commons.lang3
    implementation libs.google.cloud.run

    // Test dependencies
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:4.11.0'
    testImplementation 'org.mockito:mockito-inline:4.11.0'
}

tasks.register('copyJarsToResources') {
    def sourceLibsDir = file('build/libs')
    def destinationDir = file('src/main/resources/jars')

    dependsOn(':dbsync:gcsync:jar', ':dbsync:gcsync:testFixturesJar')

    inputs.dir(sourceLibsDir)
    outputs.dir(destinationDir)

    doLast {
        destinationDir.mkdirs()
        copy {
            from sourceLibsDir.listFiles({ File f -> f.isFile() && f.name.endsWith('.jar') } as java.io.FileFilter)
            into destinationDir
        }
    }
}


application {
    mainClass = 'com.google.edwmigration.dbsync.gcsync.GcsyncMain'
}

shadowJar {
    mergeServiceFiles()
    finalizedBy copyJarsToResources
}

test {
    useJUnit()
}